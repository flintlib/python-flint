from flint.flintlib.types.flint cimport flint_bitcnt_t, flint_rand_t, fmpz_struct, fmpz_t, slong, ulong
from flint.flintlib.types.fmpq cimport fmpq_t
from flint.flintlib.types.gr cimport gr_ctx_t, gr_mpoly_t, gr_ptr, gr_srcptr, gr_stream_t, gr_vec_t, truth_t
from flint.flintlib.types.mpoly cimport ordering_t

# unknown type gr_mpoly_ctx_t

# .. macro:: GR_MPOLY_MCTX(ctx)
# .. macro:: GR_MPOLY_CCTX(ctx)
# .. macro:: GR_MPOLY_VARS(ctx)
# .. macro:: GR_MPOLY_NVARS(ctx)

cdef extern from "flint/gr_mpoly.h":
    # void gr_mpoly_ctx_init(gr_mpoly_ctx_t ctx, gr_ctx_t base_ring, slong nvars, const ordering_t ord)
    # void gr_mpoly_ctx_clear(gr_mpoly_ctx_t ctx)
    # void gr_mpoly_ctx_init_rand(gr_mpoly_ctx_t ctx, flint_rand_t state, gr_ctx_t base_ring, slong max_nvars)
    # int gr_mpoly_ctx_set_gen_names(gr_mpoly_ctx_t ctx, const char ** s)
    # int gr_mpoly_ctx_write(gr_stream_t out, gr_mpoly_ctx_t ctx)
    # truth_t gr_mpoly_ctx_is_ring(gr_mpoly_ctx_t ctx)
    # truth_t gr_mpoly_ctx_is_zero_ring(gr_mpoly_ctx_t ctx)
    # truth_t gr_mpoly_ctx_is_commutative_ring(gr_mpoly_ctx_t ctx)
    # truth_t gr_mpoly_ctx_is_integral_domain(gr_mpoly_ctx_t ctx)
    # truth_t gr_mpoly_ctx_is_field(gr_mpoly_ctx_t ctx)
    # truth_t gr_mpoly_ctx_is_threadsafe(gr_mpoly_ctx_t ctx)
    # void gr_mpoly_init(gr_mpoly_t A, gr_mpoly_ctx_t ctx)
    # void gr_mpoly_init3(gr_mpoly_t A, slong alloc, flint_bitcnt_t bits, gr_mpoly_ctx_t ctx)
    # void gr_mpoly_init2(gr_mpoly_t A, slong alloc, gr_mpoly_ctx_t ctx)
    # void gr_mpoly_clear(gr_mpoly_t A, gr_mpoly_ctx_t ctx)
    # void gr_mpoly_swap(gr_mpoly_t A, gr_mpoly_t B, gr_mpoly_ctx_t ctx)
    # void gr_mpoly_set_shallow(gr_mpoly_t A, const gr_mpoly_t B, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set(gr_mpoly_t A, const gr_mpoly_t B, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_zero(gr_mpoly_t A, gr_mpoly_ctx_t ctx)
    # truth_t gr_mpoly_is_zero(const gr_mpoly_t A, gr_mpoly_ctx_t ctx)
    # slong gr_mpoly_length(const gr_mpoly_t A, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_gen(gr_mpoly_t A, slong var, gr_mpoly_ctx_t ctx)
    # truth_t gr_mpoly_is_gen(const gr_mpoly_t A, slong var, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_gens(gr_vec_t res, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_gens_recursive(gr_vec_t vec, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_scalar(gr_mpoly_t A, gr_srcptr c, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_ui(gr_mpoly_t A, ulong c, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_si(gr_mpoly_t A, slong c, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_fmpz(gr_mpoly_t A, const fmpz_t c, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_fmpq(gr_mpoly_t A, const fmpq_t c, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_other(gr_mpoly_t res, gr_srcptr A, gr_ctx_t A_ctx, gr_mpoly_ctx_t ctx)
    # truth_t gr_mpoly_equal(const gr_mpoly_t A, const gr_mpoly_t B, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_randtest_bits(gr_mpoly_t A, flint_rand_t state, slong length, flint_bitcnt_t exp_bits, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_write_pretty(gr_stream_t out, const gr_mpoly_t A, const char ** x, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_print_pretty(const gr_mpoly_t A, const char ** x, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_get_coeff_scalar_fmpz(gr_ptr c, const gr_mpoly_t A, const fmpz_struct * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_get_coeff_scalar_ui(gr_ptr c, const gr_mpoly_t A, const ulong * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_coeff_scalar_fmpz(gr_mpoly_t A, gr_srcptr c, const fmpz_struct * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_coeff_ui_fmpz(gr_mpoly_t A, ulong c, const fmpz_struct * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_coeff_si_fmpz(gr_mpoly_t A, slong c, const fmpz_struct * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_coeff_fmpz_fmpz(gr_mpoly_t A, const fmpz_t c, const fmpz_struct * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_coeff_fmpq_fmpz(gr_mpoly_t A, const fmpq_t c, const fmpz_struct * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_coeff_scalar_ui(gr_mpoly_t poly, gr_srcptr c, const ulong * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_coeff_ui_ui(gr_mpoly_t A, ulong c, const ulong * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_coeff_si_ui(gr_mpoly_t A, slong c, const ulong * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_coeff_fmpz_ui(gr_mpoly_t A, const fmpz_t c, const ulong * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_set_coeff_fmpq_ui(gr_mpoly_t A, const fmpq_t c, const ulong * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_neg(gr_mpoly_t A, const gr_mpoly_t B, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_add(gr_mpoly_t A, const gr_mpoly_t B, const gr_mpoly_t C, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_sub(gr_mpoly_t A, const gr_mpoly_t B, const gr_mpoly_t C, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_mul(gr_mpoly_t A, const gr_mpoly_t B, const gr_mpoly_t C, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_mul_johnson(gr_mpoly_t A, const gr_mpoly_t B, const gr_mpoly_t C, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_mul_monomial(gr_mpoly_t A, const gr_mpoly_t B, const gr_mpoly_t C, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_mul_scalar(gr_mpoly_t A, const gr_mpoly_t B, gr_srcptr c, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_mul_si(gr_mpoly_t A, const gr_mpoly_t B, slong c, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_mul_ui(gr_mpoly_t A, const gr_mpoly_t B, ulong c, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_mul_fmpz(gr_mpoly_t A, const gr_mpoly_t B, const fmpz_t c, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_mul_fmpq(gr_mpoly_t A, const gr_mpoly_t B, const fmpq_t c, gr_mpoly_ctx_t ctx)
    # void _gr_mpoly_fit_length(gr_ptr * coeffs, slong * coeffs_alloc, ulong ** exps, slong * exps_alloc, slong N, slong length, gr_mpoly_ctx_t ctx)
    # void gr_mpoly_fit_length(gr_mpoly_t A, slong len, gr_mpoly_ctx_t ctx)
    # void gr_mpoly_fit_bits(gr_mpoly_t A, flint_bitcnt_t bits, gr_mpoly_ctx_t ctx)
    # void gr_mpoly_fit_length_fit_bits(gr_mpoly_t A, slong len, flint_bitcnt_t bits, gr_mpoly_ctx_t ctx)
    # void gr_mpoly_fit_length_reset_bits(gr_mpoly_t A, slong len, flint_bitcnt_t bits, gr_mpoly_ctx_t ctx)
    # void _gr_mpoly_set_length(gr_mpoly_t A, slong newlen, gr_mpoly_ctx_t ctx)
    # void _gr_mpoly_push_exp_ui(gr_mpoly_t A, const ulong * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_push_term_scalar_ui(gr_mpoly_t A, gr_srcptr c, const ulong * exp, gr_mpoly_ctx_t ctx)
    # void _gr_mpoly_push_exp_fmpz(gr_mpoly_t A, const fmpz_struct * exp, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_push_term_scalar_fmpz(gr_mpoly_t A, gr_srcptr c, const fmpz_struct * exp, gr_mpoly_ctx_t ctx)
    # void gr_mpoly_sort_terms(gr_mpoly_t A, gr_mpoly_ctx_t ctx)
    # int gr_mpoly_combine_like_terms(gr_mpoly_t A, gr_mpoly_ctx_t ctx)
    # truth_t gr_mpoly_is_canonical(const gr_mpoly_t A, gr_mpoly_ctx_t ctx)
    # void gr_mpoly_assert_canonical(const gr_mpoly_t A, gr_mpoly_ctx_t ctx)
